// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ChangeItemBase : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Specifies the Microsoft Entra service name to which this item belongs. Supports $filter (eq, ne, in) and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChangeItemService
        {
            get { return BackingStore?.Get<string?>("changeItemService"); }
            set { BackingStore?.Set("changeItemService", value); }
        }
#nullable restore
#else
        public string ChangeItemService
        {
            get { return BackingStore?.Get<string>("changeItemService"); }
            set { BackingStore?.Set("changeItemService", value); }
        }
#endif
        /// <summary>Description of the new feature or change announcement. Supports $filter (eq, ne, in, startswith) and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>Link to the feature or change documentation. Supports $filter (any with eq).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DocumentationUrls
        {
            get { return BackingStore?.Get<List<string>?>("documentationUrls"); }
            set { BackingStore?.Set("documentationUrls", value); }
        }
#nullable restore
#else
        public List<string> DocumentationUrls
        {
            get { return BackingStore?.Get<List<string>>("documentationUrls"); }
            set { BackingStore?.Set("documentationUrls", value); }
        }
#endif
        /// <summary>A short description of the feature or change. Supports $filter (eq, ne, in, startswith) and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShortDescription
        {
            get { return BackingStore?.Get<string?>("shortDescription"); }
            set { BackingStore?.Set("shortDescription", value); }
        }
#nullable restore
#else
        public string ShortDescription
        {
            get { return BackingStore?.Get<string>("shortDescription"); }
            set { BackingStore?.Set("shortDescription", value); }
        }
#endif
        /// <summary>Microsoft Entra-specific tags. Example values: Top announcement - entraroadmaphighlightproductnews, New release highlight - entraroadmaphighlightnewfeature. Supports $filter (any with eq).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SystemTags
        {
            get { return BackingStore?.Get<List<string>?>("systemTags"); }
            set { BackingStore?.Set("systemTags", value); }
        }
#nullable restore
#else
        public List<string> SystemTags
        {
            get { return BackingStore?.Get<List<string>>("systemTags"); }
            set { BackingStore?.Set("systemTags", value); }
        }
#endif
        /// <summary>Identity and Access Management (IAM) related tags. Example values: External Identities, Reliability and Resilience. Supports $filter (any with eq).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags
        {
            get { return BackingStore?.Get<List<string>?>("tags"); }
            set { BackingStore?.Set("tags", value); }
        }
#nullable restore
#else
        public List<string> Tags
        {
            get { return BackingStore?.Get<List<string>>("tags"); }
            set { BackingStore?.Set("tags", value); }
        }
#endif
        /// <summary>Title of the feature or change. Supports $filter (eq, ne, in, startswith) and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title
        {
            get { return BackingStore?.Get<string?>("title"); }
            set { BackingStore?.Set("title", value); }
        }
#nullable restore
#else
        public string Title
        {
            get { return BackingStore?.Get<string>("title"); }
            set { BackingStore?.Set("title", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ChangeItemBase"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ChangeItemBase CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.announcement" => new global::Microsoft.Graph.Beta.Models.Announcement(),
                "#microsoft.graph.roadmap" => new global::Microsoft.Graph.Beta.Models.Roadmap(),
                _ => new global::Microsoft.Graph.Beta.Models.ChangeItemBase(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "changeItemService", n => { ChangeItemService = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "documentationUrls", n => { DocumentationUrls = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "shortDescription", n => { ShortDescription = n.GetStringValue(); } },
                { "systemTags", n => { SystemTags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("changeItemService", ChangeItemService);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("documentationUrls", DocumentationUrls);
            writer.WriteStringValue("shortDescription", ShortDescription);
            writer.WriteCollectionOfPrimitiveValues<string>("systemTags", SystemTags);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteStringValue("title", Title);
        }
    }
}
#pragma warning restore CS0618
