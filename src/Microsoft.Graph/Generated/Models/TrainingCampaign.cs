// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models {
    #pragma warning disable CS1591
    public class TrainingCampaign : Entity, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>Details about the schedule and current status for a training campaign</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CampaignSchedule? CampaignSchedule {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CampaignSchedule?>("campaignSchedule"); }
            set { BackingStore?.Set("campaignSchedule", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CampaignSchedule CampaignSchedule {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CampaignSchedule>("campaignSchedule"); }
            set { BackingStore?.Set("campaignSchedule", value); }
        }
#endif
        /// <summary>Identity of the user who created the training campaign</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EmailIdentity? CreatedBy {
            get { return BackingStore?.Get<EmailIdentity?>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#nullable restore
#else
        public EmailIdentity CreatedBy {
            get { return BackingStore?.Get<EmailIdentity>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#endif
        /// <summary>Date and time of creation of the training campaign.</summary>
        public DateTimeOffset? CreatedDateTime {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Description of the training campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>Display name of the training campaign. Supports $filter and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>Details about the end user notification setting.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.EndUserNotificationSetting? EndUserNotificationSetting {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.EndUserNotificationSetting?>("endUserNotificationSetting"); }
            set { BackingStore?.Set("endUserNotificationSetting", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.EndUserNotificationSetting EndUserNotificationSetting {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.EndUserNotificationSetting>("endUserNotificationSetting"); }
            set { BackingStore?.Set("endUserNotificationSetting", value); }
        }
#endif
        /// <summary>Users excluded from the training campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AccountTargetContent? ExcludedAccountTarget {
            get { return BackingStore?.Get<AccountTargetContent?>("excludedAccountTarget"); }
            set { BackingStore?.Set("excludedAccountTarget", value); }
        }
#nullable restore
#else
        public AccountTargetContent ExcludedAccountTarget {
            get { return BackingStore?.Get<AccountTargetContent>("excludedAccountTarget"); }
            set { BackingStore?.Set("excludedAccountTarget", value); }
        }
#endif
        /// <summary>Users targeted in the training campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AccountTargetContent? IncludedAccountTarget {
            get { return BackingStore?.Get<AccountTargetContent?>("includedAccountTarget"); }
            set { BackingStore?.Set("includedAccountTarget", value); }
        }
#nullable restore
#else
        public AccountTargetContent IncludedAccountTarget {
            get { return BackingStore?.Get<AccountTargetContent>("includedAccountTarget"); }
            set { BackingStore?.Set("includedAccountTarget", value); }
        }
#endif
        /// <summary>Identity of the user who most recently modified the training campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EmailIdentity? LastModifiedBy {
            get { return BackingStore?.Get<EmailIdentity?>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#nullable restore
#else
        public EmailIdentity LastModifiedBy {
            get { return BackingStore?.Get<EmailIdentity>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#endif
        /// <summary>Date and time of the most recent modification of the training campaign.</summary>
        public DateTimeOffset? LastModifiedDateTime {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>Report of the training campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TrainingCampaignReport? Report {
            get { return BackingStore?.Get<TrainingCampaignReport?>("report"); }
            set { BackingStore?.Set("report", value); }
        }
#nullable restore
#else
        public TrainingCampaignReport Report {
            get { return BackingStore?.Get<TrainingCampaignReport>("report"); }
            set { BackingStore?.Set("report", value); }
        }
#endif
        /// <summary>Details about the training settings for a training campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.TrainingSetting? TrainingSetting {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.TrainingSetting?>("trainingSetting"); }
            set { BackingStore?.Set("trainingSetting", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.TrainingSetting TrainingSetting {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.TrainingSetting>("trainingSetting"); }
            set { BackingStore?.Set("trainingSetting", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="TrainingCampaign"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new TrainingCampaign CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new TrainingCampaign();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                {"campaignSchedule", n => { CampaignSchedule = n.GetObjectValue<Microsoft.Graph.Beta.Models.CampaignSchedule>(Microsoft.Graph.Beta.Models.CampaignSchedule.CreateFromDiscriminatorValue); } },
                {"createdBy", n => { CreatedBy = n.GetObjectValue<EmailIdentity>(EmailIdentity.CreateFromDiscriminatorValue); } },
                {"createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"displayName", n => { DisplayName = n.GetStringValue(); } },
                {"endUserNotificationSetting", n => { EndUserNotificationSetting = n.GetObjectValue<Microsoft.Graph.Beta.Models.EndUserNotificationSetting>(Microsoft.Graph.Beta.Models.EndUserNotificationSetting.CreateFromDiscriminatorValue); } },
                {"excludedAccountTarget", n => { ExcludedAccountTarget = n.GetObjectValue<AccountTargetContent>(AccountTargetContent.CreateFromDiscriminatorValue); } },
                {"includedAccountTarget", n => { IncludedAccountTarget = n.GetObjectValue<AccountTargetContent>(AccountTargetContent.CreateFromDiscriminatorValue); } },
                {"lastModifiedBy", n => { LastModifiedBy = n.GetObjectValue<EmailIdentity>(EmailIdentity.CreateFromDiscriminatorValue); } },
                {"lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                {"report", n => { Report = n.GetObjectValue<TrainingCampaignReport>(TrainingCampaignReport.CreateFromDiscriminatorValue); } },
                {"trainingSetting", n => { TrainingSetting = n.GetObjectValue<Microsoft.Graph.Beta.Models.TrainingSetting>(Microsoft.Graph.Beta.Models.TrainingSetting.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CampaignSchedule>("campaignSchedule", CampaignSchedule);
            writer.WriteObjectValue<EmailIdentity>("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.EndUserNotificationSetting>("endUserNotificationSetting", EndUserNotificationSetting);
            writer.WriteObjectValue<AccountTargetContent>("excludedAccountTarget", ExcludedAccountTarget);
            writer.WriteObjectValue<AccountTargetContent>("includedAccountTarget", IncludedAccountTarget);
            writer.WriteObjectValue<EmailIdentity>("lastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<TrainingCampaignReport>("report", Report);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.TrainingSetting>("trainingSetting", TrainingSetting);
        }
    }
}
